#!/bin/bash
function parse_git_branch {
  if git rev-parse --is-inside-work-tree &>/dev/null; then
    local branch=$(git symbolic-ref --short HEAD 2>/dev/null)
    local diff
    git diff --quiet || diff="$2"
    if [ -n "$branch" ]; then
      local status=""
      local ahead=$(git rev-list --count @{u}..HEAD 2>/dev/null)
      local behind=$(git rev-list --count HEAD..@{u} 2>/dev/null)
      if [ -n "$ahead" ] && [ "$ahead" -gt 0 ]; then
        status+="$(printf '\ueb71')" 
      fi
      if [ -n "$behind" ] && [ "$behind" -gt 0 ]; then
        status+="$(printf '\ueb6e')" 
      fi
      echo "[$1$diff$branch$status]"
    fi
  fi
}

function abbreviate_path {
  local full_path=$1
  local abbreviated_path=""
  local real_home=$(realpath $HOME)
  # Check if the path is within the home directory
  if [[ $full_path == "$real_home"* ]]; then
    full_path="~/${full_path#$real_home}"
  fi
  
  if [[ $full_path == "$HOME"* ]]; then
    full_path="~/${full_path#$HOME}"
  fi
  
  local IFS='/'
  read -ra path_parts <<< "$full_path"
  
  # Abbreviate each part of the path
  for part in "${path_parts[@]}"; do
    if [[ $part == ${path_parts[-1]} || $part == "~" ]]; then
      abbreviated_path+="$part"
    else
      abbreviated_path+="${part:0:1}/"
    fi
  done
  
  echo "$2$abbreviated_path"
}

function check_distrobox {
	local distro_id=${CONTAINER_ID}
	if [ -n "$distro_id" ]; then
		echo "$1$distro_id"
	fi
}

if [ "$2" == "bash" ]; then
    # For Bash, wrap color codes in \[ and \] to avoid affecting the width
    RESET="\[\033[0m\]"
    BOLD="\[\033[1m\]"
    FG_BLACK="\[\033[30m\]"
    FG_RED="\[\033[31m\]"
    FG_GREEN="\[\033[32m\]"
    FG_YELLOW="\[\033[33m\]"
    FG_BLUE="\[\033[34m\]"
    FG_MAGENTA="\[\033[35m\]"
    FG_CYAN="\[\033[36m\]"
    FG_WHITE="\[\033[37m\]"
    BG_BLACK="\[\033[40m\]"
    BG_RED="\[\033[41m\]"
    BG_GREEN="\[\033[42m\]"
    BG_YELLOW="\[\033[43m\]"
    BG_BLUE="\[\033[44m\]"
    BG_MAGENTA="\[\033[45m\]"
    BG_CYAN="\[\033[46m\]"
    BG_WHITE="\[\033[47m\]"

    FG_BRIGHT_BLACK="\[\033[90m\]"
    FG_BRIGHT_RED="\[\033[91m\]"
    FG_BRIGHT_GREEN="\[\033[92m\]"
    FG_BRIGHT_YELLOW="\[\033[93m\]"
    FG_BRIGHT_BLUE="\[\033[94m\]"
    FG_BRIGHT_MAGENTA="\[\033[95m\]"
    FG_BRIGHT_CYAN="\[\033[96m\]"
    FG_BRIGHT_WHITE="\[\033[97m\]"
    BG_BRIGHT_BLACK="\[\033[100m\]"
    BG_BRIGHT_RED="\[\033[101m\]"
    BG_BRIGHT_GREEN="\[\033[102m\]"
    BG_BRIGHT_YELLOW="\[\033[103m\]"
    BG_BRIGHT_BLUE="\[\033[104m\]"
    BG_BRIGHT_MAGENTA="\[\033[105m\]"
    BG_BRIGHT_CYAN="\[\033[106m\]"
    BG_BRIGHT_WHITE="\[\033[107m\]"
else
    RESET="\033[0m"
    BOLD="\033[1m"
    FG_BLACK="\033[30m"
    FG_RED="\033[31m"
    FG_GREEN="\033[32m"
    FG_YELLOW="\033[33m"
    FG_BLUE="\033[34m"
    FG_MAGENTA="\033[35m"
    FG_CYAN="\033[36m"
    FG_WHITE="\033[37m"
    BG_BLACK="\033[40m"
    BG_RED="\033[41m"
    BG_GREEN="\033[42m"
    BG_YELLOW="\033[43m"
    BG_BLUE="\033[44m"
    BG_MAGENTA="\033[45m"
    BG_CYAN="\033[46m"
    BG_WHITE="\033[47m"

    FG_BRIGHT_BLACK="\033[90m"
    FG_BRIGHT_RED="\033[91m"
    FG_BRIGHT_GREEN="\033[92m"
    FG_BRIGHT_YELLOW="\033[93m"
    FG_BRIGHT_BLUE="\033[94m"
    FG_BRIGHT_MAGENTA="\033[95m"
    FG_BRIGHT_CYAN="\033[96m"
    FG_BRIGHT_WHITE="\033[97m"
    BG_BRIGHT_BLACK="\033[100m"
    BG_BRIGHT_RED="\033[101m"
    BG_BRIGHT_GREEN="\033[102m"
    BG_BRIGHT_YELLOW="\033[103m"
    BG_BRIGHT_BLUE="\033[104m"
    BG_BRIGHT_MAGENTA="\033[105m"
    BG_BRIGHT_CYAN="\033[106m"
    BG_BRIGHT_WHITE="\033[107m"
fi

echo -e "${BOLD}${FG_GREEN}$(whoami)@$(hostname)${RESET}${BOLD}${FG_BRIGHT_RED}$(check_distrobox " \uf101 ")${RESET} ${BOLD}${FG_BLUE}$1${RESET} ${BOLD}${FG_CYAN}$(abbreviate_path "$PWD")${RESET} ${BOLD}${FG_YELLOW}$(parse_git_branch "\uf418 " "*")${RESET}\uf105 "
